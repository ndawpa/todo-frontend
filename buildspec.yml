version: 0.2
env:
  secret_manager:
    SONAR_TOKEN: arn:aws:secretsmanager:us-east-1:440748827272:secret:sonar-variables-70WvqD:SONAR_TOKEN
    SONAR_HOST_URL: arn:aws:secretsmanager:us-east-1:440748827272:secret:sonar-variables-70WvqD:SONAR_HOST_URL
    SONAR_PROJECT_KEY: arn:aws:secretsmanager:us-east-1:440748827272:secret:sonar-variables-70WvqD:SONAR_PROJECT_KEY
  variables:
    # SONAR_TOKEN: sqa_eb899cbf3bfd908fca69f45482fbfcedd2bbe7f9
    # SONAR_HOST_URL: https://sonarqube.guiadodevops.com/
    # SONAR_PROJECT_KEY: ndawpa_todo-frontend_5d20ef4c-e7c7-4e88-ae65-d556c2f07f02
    SCANNER_VER: 7.2.0.5079
phases:
  install:
    runtime-versions:
      java: corretto17
      nodejs: 18
    commands:
      - echo "Installing dependencies..."
      - npm ci

  pre_build:
    commands:
      - echo "Installing Sonar Scanner..."
      - curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SCANNER_VER}-linux-x64.zip
      - unzip sonar-scanner.zip -d /opt

  build:
    commands:
      - echo "Building frontend..."
      - npm run build
      - echo "Build completed. Contents of dist/:"
      - ls -la dist/
      - echo "Running SonarQube Analysis..."
      - /opt/sonar-scanner-${SCANNER_VER}-linux-x64/bin/sonar-scanner -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.sources=. -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN
      
  post_build:
    commands:
      - echo "Deploying to S3..."
      - aws s3 sync dist/ s3://$WEBSITE_BUCKET --delete
      - echo "Invalidating CloudFront cache..."
      - aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
      - echo "Deployment completed!"

artifacts:
  files:
    - '**/*'
  base-directory: dist

cache:
  paths:
    - node_modules/**/* 